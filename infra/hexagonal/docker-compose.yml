version: '3.9'

services:
#  mysql:
#    image: mysql:latest
#    container_name: tron-mysql
#    ports:
#      - "3306:3306"
#    volumes:
#      - ./mysql/script.sql:/docker-entrypoint-initdb.d/script.sql
#    environment:
#      LANG: C.UTF-8
#    restart: always
#    command: ["mysqld", "--character-set-server=utf8", "--collation-server=utf8_unicode_ci"]
##    profiles:
##      - rest
##      - db
##      - all
#

#  mongo:
#    image: mongo:latest
#    container_name: tron-mongodb
#    ports:
#      - "27017:27017"
#    environment:
##    profiles:
##      - driven
##      - db
##      - all

 
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - kafka_network
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:latest
    hostname: broker
    container_name: broker
    networks:
      - kafka_network
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    container_name: schema-registry
    networks:
      - kafka_network
    depends_on:
      - zookeeper
      - broker
    ports:
      - "8181:8181"
    environment:
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8181'
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://broker:29092'

  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:7.2.1
    hostname: ksqldb-server
    container_name: ksqldb-server
    networks:
      - kafka_network
    depends_on:
      - broker
    ports:
      - "8088:8088"
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: broker:29092
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"

##  ksqldb-cli:
##    image: confluentinc/cp-ksqldb-cli:7.2.1
##    container_name: ksqldb-cli
##    networks:
##      - kafka_network
##    depends_on:
##      - broker
##      - ksqldb-server
##    entrypoint: /bin/sh
##    tty: true

  control-center:
    image: confluentinc/cp-enterprise-control-center:latest
    hostname: kafka-control-center
    container_name: control-center
    networks:
      - kafka_network
    depends_on:
      - zookeeper
      - broker
      - schema-registry
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_CONNECT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8181"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

networks:
  kafka_network:
    driver: bridge